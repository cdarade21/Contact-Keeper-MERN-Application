{"ast":null,"code":"var _jsxFileName = \"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = async contact => {\n    //contact.id = uuidv4()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set clear Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      setCurrent,\n      clearCurrent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuidv4","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport {v4 as uuidv4} from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts:[],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    //Add Contact\n    const addContact = async contact => {\n        //contact.id = uuidv4()\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/contacts', contact, config)\n            dispatch({\n                type: ADD_CONTACT,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type:CONTACT_ERROR,\n                payload:err.response.msg\n            })  \n        }\n        \n        dispatch({type: ADD_CONTACT, payload: contact})\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({type: DELETE_CONTACT, payload: id})\n    }\n\n    //Set clear Contact\n    const setCurrent = contact => {\n        dispatch({type: SET_CURRENT, payload: contact})\n    }\n\n    //Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({type: CLEAR_CURRENT})\n    }\n\n    //Update Contact\n    const updateContact = contact => {\n        dispatch({type: UPDATE_CONTACT, payload: contact})\n    }\n    //Filter Contact\n    const filterContacts = text => {\n        dispatch({type: FILTER_CONTACTS, payload: text})\n    }\n\n    //Clear Filter\n    const clearFilter = () => {\n        dispatch({type: CLEAR_FILTER})\n    }\n\n    return (\n        <ContactContext.Provider\n        value={{\n            contacts:state.contacts,\n            current: state.current,\n            filtered:state.filtered,\n            addContact,\n            deleteContact,\n            updateContact,\n            filterContacts,\n            clearFilter,\n            setCurrent,\n            clearCurrent\n        }}\n        >\n        {props.children}\n        </ContactContext.Provider>\n    )\n}\n\nexport default ContactState"]},"metadata":{},"sourceType":"module"}