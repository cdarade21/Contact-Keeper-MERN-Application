{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","filter","contact","id","current"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,cARJ,EASIC,YATJ,EAUIC,aAVJ,QAWS,UAXT;AAaE,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFP,OAAP;;AAIJ,SAAKZ,cAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAvD;AAFP,OAAP;;AAIJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHQ,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAFb,OAAP;;AAIJ,SAAKV,aAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHQ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ;AACI,aAAOR,KAAP;AAvBR;AAyBD,CA1BD","sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n  } from '../types';\n\n  export default (state, action) => {\n    switch(action.type) {\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload]\n            }\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n            \n        default:\n            return state\n    }\n  }"]},"metadata":{},"sourceType":"module"}