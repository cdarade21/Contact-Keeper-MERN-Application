{"ast":null,"code":"var _jsxFileName = \"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    addContact,\n    current,\n    clearCurrent\n  } = contactContext;\n  /*useEffect(() => {\n      if (current !== null) {\n        setContact(current);\n      } else {\n        setContact({\n          name: '',\n          email: '',\n          phone: '',\n          type: 'personal'\n        });\n      }\n    }, [contactContext, current]);*/\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.prevetDefault();\n\n    if (currenr === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, current ? 'Edit Contact' : 'Add Contact'), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), ' ', \"Personal\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), ' ', \"Professional\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), current && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","contact","setContact","name","email","phone","type","onChange","e","target","value","onSubmit","prevetDefault","currenr","updateContact","clearAll"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport ContactContext from '../../context/contact/contactContext'\n\nconst ContactForm = () => {\n\n    const contactContext = useContext(ContactContext)\n\n    const {addContact, current, clearCurrent} = contactContext\n\n    /*useEffect(() => {\n        if (current !== null) {\n          setContact(current);\n        } else {\n          setContact({\n            name: '',\n            email: '',\n            phone: '',\n            type: 'personal'\n          });\n        }\n      }, [contactContext, current]);*/\n    \n      const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    \n      const { name, email, phone, type } = contact;\n\n    const onChange = e => setContact({ ...contact, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.prevetDefault()\n        if(currenr===null){\n            addContact(contact)\n        }\n        else{\n            updateContact(contact)\n        }\n        \n        setContact({\n            name:'',\n            email:'',\n            phone:'',\n            type:'personal'\n        })\n    }\n\n    const clearAll = () => {\n        clearCurrent()    \n    }\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className='text-primary'>{current ? 'Edit Contact' : 'Add Contact'}</h2>\n            <input \n                type=\"text\" \n                name=\"name\" \n                placeholder=\"Name\" \n                value={name}\n                onChange={onChange}>\n            </input>\n            <input \n                type=\"email\" \n                name=\"email\" \n                placeholder=\"Email\" \n                value={email}\n                onChange={onChange}>\n            </input>\n            <input\n                type='text'\n                placeholder='Phone'\n                name='phone'\n                value={phone}\n                onChange={onChange}\n            />\n            <h4>Contact Type</h4>\n            <input\n                type='radio'\n                name='type'\n                value='personal'\n                checked={type === 'personal'}\n                onChange={onChange}\n            />{' '}\n            Personal{' '}\n            <input\n                type='radio'\n                name='type'\n                value='professional'\n                checked={type === 'professional'}\n                onChange={onChange}\n            />{' '}\n             Professional  \n            <div>\n                <input \n                    type=\"submit\" \n                    value={current ? 'Update Contact' : 'Add Contact'} \n                    className=\"btn btn-primary btn-block\">\n                </input>\n            </div>\n            {current && <div>\n                <button className=\"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\n                </div>}\n        </form>\n\n    )\n}\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}