{"ast":null,"code":"import _toConsumableArray from\"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,CLEAR_CONTACTS}from'../types';export default(function(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}),loading:false});case CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:null,filtered:null,error:null,current:null});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case FILTER_CONTACTS:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),'gi');return contact.name.match(regex)||contact.email.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","map","contact","_id","filter","filtered","error","current","regex","RegExp","name","match","email"],"mappings":"mYAAA,OACIA,YADJ,CAEIC,WAFJ,CAGIC,cAHJ,CAIIC,WAJJ,CAKIC,aALJ,CAMIC,cANJ,CAOIC,eAPJ,CAQIC,YARJ,CASIC,aATJ,CAUIC,cAVJ,KAWS,UAXT,CAaE,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,YAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKd,CAAAA,WAAL,CACE,sCACKS,KADL,MAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAHX,GAKF,IAAKV,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmB,SAAAC,OAAO,QAClCA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OADpB,EAA1B,CAFZ,CAKEF,OAAO,CAAE,KALX,GAOF,IAAKb,CAAAA,cAAL,CACE,sCACKQ,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CACR,SAAAF,OAAO,QAAIA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAA3B,EADC,CAFZ,CAKEC,OAAO,CAAE,KALX,GAOF,IAAKN,CAAAA,cAAL,CACE,sCACKC,KADL,MAEEG,QAAQ,CAAE,IAFZ,CAGEO,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,IAJT,CAKEC,OAAO,CAAE,IALX,GAOF,IAAKnB,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEY,OAAO,CAAEX,MAAM,CAACG,OAFlB,GAIF,IAAKV,CAAAA,aAAL,CACE,sCACKM,KADL,MAEEY,OAAO,CAAE,IAFX,GAIF,IAAKhB,CAAAA,eAAL,CACE,sCACKI,KADL,MAEEU,QAAQ,CAAEV,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsB,SAAAF,OAAO,CAAI,CACzC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CACD,CAHS,CAFZ,GAOF,IAAKhB,CAAAA,YAAL,CACE,sCACKG,KADL,MAEEU,QAAQ,CAAE,IAFZ,GAIF,IAAKZ,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEW,KAAK,CAAEV,MAAM,CAACG,OAFhB,GAIF,QACE,MAAOJ,CAAAA,KAAP,CAlEJ,CAoED,CArED","sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    CLEAR_CONTACTS\n  } from '../types';\n  \n  export default (state, action) => {\n    switch (action.type) {\n      case GET_CONTACTS:\n        return {\n          ...state,\n          contacts: action.payload,\n          loading: false\n        };\n      case ADD_CONTACT:\n        return {\n          ...state,\n          contacts: [action.payload, ...state.contacts],\n          loading: false\n        };\n      case UPDATE_CONTACT:\n        return {\n          ...state,\n          contacts: state.contacts.map(contact =>\n            contact._id === action.payload._id ? action.payload : contact\n          ),\n          loading: false\n        };\n      case DELETE_CONTACT:\n        return {\n          ...state,\n          contacts: state.contacts.filter(\n            contact => contact._id !== action.payload\n          ),\n          loading: false\n        };\n      case CLEAR_CONTACTS:\n        return {\n          ...state,\n          contacts: null,\n          filtered: null,\n          error: null,\n          current: null\n        };\n      case SET_CURRENT:\n        return {\n          ...state,\n          current: action.payload\n        };\n      case CLEAR_CURRENT:\n        return {\n          ...state,\n          current: null\n        };\n      case FILTER_CONTACTS:\n        return {\n          ...state,\n          filtered: state.contacts.filter(contact => {\n            const regex = new RegExp(`${action.payload}`, 'gi');\n            return contact.name.match(regex) || contact.email.match(regex);\n          })\n        };\n      case CLEAR_FILTER:\n        return {\n          ...state,\n          filtered: null\n        };\n      case CONTACT_ERROR:\n        return {\n          ...state,\n          error: action.payload\n        };\n      default:\n        return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}