{"ast":null,"code":"var _jsxFileName = \"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n  // Register User\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const loadUser = async () => {\n    //load token into global headers\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Logout\n  // Clear Errors\n\n\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      clearErrors\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","register","formData","config","headers","res","post","type","payload","data","err","response","msg","loadUser","get","clearErrors","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,eAAe,EAAE,IAFA;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAApC,CATuB,CAWvB;AAGA;;AACA,QAAMU,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AAC/B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ;AADE,KAAf;;AAKA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAW,YAAX,EAAwBJ,QAAxB,EAAkCC,MAAlC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAE1B,gBADD;AAEL2B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,GAAP,EAAY;AACVV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACzB,aADA;AAEL0B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFtB,OAAD,CAAR;AAIH;AAEJ,GAnBD,CAfuB,CAoCvB;;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzB;AACA,QAAG;AACC,YAAMR,GAAG,GAAG,MAAM3B,KAAK,CAACoC,GAAN,CAAU,WAAV,CAAlB;AACAd,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACxB,WADA;AAELyB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAMC,GAAN,EAAU;AACRV,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACvB;AADA,OAAD,CAAR;AAIH;AACJ,GAdD,CArCuB,CAoDvB;AAEA;;;AACA,QAAM+B,WAAW,GAAG,MAAM;AACtBf,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACnB;AADA,KAAD,CAAR;AAGH,GAJD;;AAOA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADV;AAEHG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFpB;AAGHC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHZ;AAIHC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAJT;AAKHC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALV;AAMHG,MAAAA,QANG;AAOHc,MAAAA;AAPG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWCzB,KAAK,CAAC0B,QAXP,CADJ;AAeH,CA7ED;;AA+EA,eAAe3B,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        user: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    // Load User\n\n\n    // Register User\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/users',formData, config);\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type:REGISTER_FAIL,\n                payload: err.response.data.msg\n            })\n        }\n\n    }\n\n    // Login User\n    const loadUser = async () => {\n        //load token into global headers\n        try{\n            const res = await axios.get('/api/auth')\n            dispatch({\n                type:USER_LOADED,\n                payload: res.data\n            })\n        } catch(err){\n            dispatch({\n                type:AUTH_ERROR\n            })\n\n        }\n    }\n    // Logout\n\n    // Clear Errors\n    const clearErrors = () => {\n        dispatch({\n            type:CLEAR_ERRORS\n        })\n    }\n\n\n    return (\n        <AuthContext.Provider\n        value={{\n            token: state.token,\n            isAuthenticated: state.isAuthenticated,\n            loading: state.loading,\n            user: state.user,\n            error: state.error,\n            register,\n            clearErrors\n        }}\n        >\n        {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState"]},"metadata":{},"sourceType":"module"}