{"ast":null,"code":"var _jsxFileName = \"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"Jill Johnson\",\n      email: \"jill@gmail.com\",\n      phone: \"111-111-111-111\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"Sara Watson\",\n      email: \"sara@gmail.com\",\n      phone: \"222-222-222\",\n      type: \"personal\"\n    }, {\n      id: 3,\n      name: \"Harry White\",\n      email: \"harry@gmail.com\",\n      phone: \"333-333-333-333\",\n      type: \"professional\"\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    console.log(\"ContactId\" + contact.id);\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set clear Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      setCurrent,\n      clearCurrent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuidv4","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","uuid","console","log","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport {v4 as uuidv4} from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts:[\n            {\n                id: 1,\n                name: \"Jill Johnson\",\n                email: \"jill@gmail.com\",\n                phone: \"111-111-111-111\",\n                type: \"personal\"\n            },\n            {\n                id: 2,\n                name: \"Sara Watson\",\n                email: \"sara@gmail.com\",\n                phone: \"222-222-222\",\n                type: \"personal\"\n            },\n            {\n                id: 3,\n                name: \"Harry White\",\n                email: \"harry@gmail.com\",\n                phone: \"333-333-333-333\",\n                type: \"professional\"\n            }\n        ],\n\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    //Add Contact\n    const addContact = contact => {\n        contact.id = uuid.v4()\n        console.log(\"ContactId\" + contact.id)\n        dispatch({type: ADD_CONTACT, payload: contact})\n    }\n\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({type: DELETE_CONTACT, payload: id})\n    }\n\n    //Set clear Contact\n    const setCurrent = contact => {\n        dispatch({type: SET_CURRENT, payload: contact})\n    }\n\n    //Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({type: CLEAR_CURRENT})\n    }\n\n    //Update Contact\n    const updateContact = contact => {\n        dispatch({type: UPDATE_CONTACT, payload: contact})\n    }\n    //Filter Contact\n    const filterContacts = text => {\n        dispatch({type: FILTER_CONTACTS, payload: text})\n    }\n\n    //Clear Filter\n    const clearFilter = () => {\n        dispatch({type: CLEAR_FILTER})\n    }\n\n    return (\n        <ContactContext.Provider\n        value={{\n            contacts:state.contacts,\n            current: state.current,\n            filtered:state.filtered,\n            addContact,\n            deleteContact,\n            updateContact,\n            filterContacts,\n            clearFilter,\n            setCurrent,\n            clearCurrent\n        }}\n        >\n        {props.children}\n        </ContactContext.Provider>\n    )\n}\n\nexport default ContactState"]},"metadata":{},"sourceType":"module"}