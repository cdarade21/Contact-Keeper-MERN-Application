{"ast":null,"code":"var _jsxFileName = \"/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from './../../context/auth/authContext';\nimport AlertContext from './../../context/alert/alertContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } /// eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please Fill in All fields', 'danger');\n    } else {\n      login(email, password);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/chaitanyadnyaneshwardarade/Documents/React/contact-keeper/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","AlertContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","user","setUser","email","password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport AuthContext from './../../context/auth/authContext';\nimport AlertContext from './../../context/alert/alertContext';\n\nconst Login = (props) => {\n\n    const alertContext = useContext(AlertContext)\n    const authContext = useContext(AuthContext)\n\n    const {setAlert} = alertContext\n    const {login, error, clearErrors, isAuthenticated} = authContext\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            props.history.push('/')\n        }\n        if(error === 'Invalid Credentials'){\n            setAlert(error, 'danger')\n            clearErrors()\n        }\n        /// eslint-disable-next-line\n    }, [error, isAuthenticated, props.history])\n\n\n    const [user, setUser] = useState({\n        email:'',\n        password:''\n    })\n\n    const {email, password} = user;\n\n    const onChange = e => setUser({...user, [e.target.name]: e.target.value})\n\n    const onSubmit = e =>{\n        e.preventDefault()\n        if(email===''||password===''){\n            setAlert('Please Fill in All fields','danger')\n        }\n        else{\n            login(email,password)\n        }\n    }\n\n    return (\n        <div className=\"form-container\">\n            <h1>\n                Account <span className=\"text-primary\">Login</span>\n            </h1>\n            <form onSubmit={onSubmit}> \n                <div className=\"form-group\">\n                    <label htmlFor='email'>Email</label>\n                    <input type=\"email\" \n                        name=\"email\" \n                        value={email} \n                        onChange={onChange}\n                        required>\n                    </input>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor='password'>Password</label>\n                    <input type=\"password\" \n                        name=\"password\" \n                        value={password} \n                        onChange={onChange}\n                        required>\n                    </input>\n                </div>\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\"></input>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}